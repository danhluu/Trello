{"ast":null,"code":"var _jsxFileName = \"E:\\\\Blameo\\\\BaseProject\\\\React\\\\Ha\\\\trello-fe\\\\src\\\\pages\\\\Card\\\\Cards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { PlusOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Modal, Typography } from 'antd';\nimport { createTask, testApi } from '../../Api/func/user';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Draggable } from 'react-smooth-dnd';\nimport './Card.css';\nimport 'antd/dist/antd.css';\nimport Task from '../Comment/Task';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards(props) {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [workTask, setWorkTask] = useState(\"\");\n  const [task, settask] = useState(\"\");\n  const [user, setuser] = useState({});\n  const {\n    onCardDrop\n  } = props;\n\n  const showModal = card => {\n    settask(card);\n    setIsModalVisible(true); // console.log(card);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onSubmit = async () => {\n    await createTask({\n      workListId: props.workListId,\n      title: workTask\n    });\n    setOpen(false);\n    props.reload();\n  };\n\n  const getUserInfor = async () => {\n    const rest = await testApi({});\n    return rest.data;\n  };\n\n  useEffect(() => {\n    const getAll = async () => {\n      //user\n      const user = await getUserInfor();\n\n      if (user) {\n        console.log(\"Thong tin nguoi dung:\", user);\n        setuser(user);\n      }\n    };\n\n    getAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      groupName: \"col\",\n      onDrop: dropResult => onCardDrop(props.workListId, dropResult),\n      getChildPayload: index => props.task[index],\n      dragClass: \"card-ghost\",\n      dropClass: \"card-ghost-drop\",\n      dropPlaceholder: {\n        animationDuration: 150,\n        showOnTop: true,\n        className: 'drop-preview'\n      },\n      dropPlaceholderAnimationDuration: 200,\n      children: props.task.map((card, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"typography\",\n            onClick: () => showModal(card),\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workList\",\n      children: open ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setWorkTask(e.target.value),\n          type: \"text\",\n          required: true,\n          className: \"input\",\n          placeholder: \"Enter a title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button\",\n          onClick: onSubmit,\n          children: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CloseOutlined, {\n          onClick: () => setOpen(false),\n          style: {\n            cursor: 'pointer',\n            marginLeft: '80px',\n            fontSize: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpen(!open),\n        className: \"add-task\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 83\n        }, this), \" Add task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      width: 1000,\n      centered: true,\n      title: \"Basic Modal\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        obj: task,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cards, \"8z9BQ4rGwCrpT4fsBJRrfmh7RRc=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["E:/Blameo/BaseProject/React/Ha/trello-fe/src/pages/Card/Cards.js"],"names":["React","useState","PlusOutlined","CloseOutlined","Modal","Typography","createTask","testApi","Container","Draggable","Task","useEffect","Cards","props","isModalVisible","setIsModalVisible","open","setOpen","workTask","setWorkTask","task","settask","user","setuser","onCardDrop","showModal","card","handleOk","handleCancel","onSubmit","workListId","title","reload","getUserInfor","rest","data","getAll","console","log","dropResult","index","animationDuration","showOnTop","className","map","e","target","value","cursor","marginLeft","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { PlusOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { Modal, Typography } from 'antd';\r\nimport { createTask, testApi } from '../../Api/func/user';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Draggable } from 'react-smooth-dnd';\r\nimport './Card.css';\r\nimport 'antd/dist/antd.css'\r\nimport Task from '../Comment/Task'\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction Cards(props) {\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [workTask, setWorkTask] = useState(\"\");\r\n    const [task, settask] = useState(\"\");\r\n    const [user, setuser] = useState({});\r\n\r\n    const {onCardDrop} = props;\r\n    const showModal = (card) => {\r\n        settask(card);\r\n        setIsModalVisible(true);\r\n        // console.log(card);\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const onSubmit = async () => {\r\n        await createTask({\r\n            workListId: props.workListId,\r\n            title: workTask\r\n        });\r\n        \r\n        setOpen(false);\r\n        props.reload();\r\n    }\r\n    const getUserInfor = async ()=>{\r\n        const rest=await testApi({\r\n        });\r\n        return rest.data;\r\n    }\r\n    useEffect(() => {\r\n        const getAll = async ()=>{\r\n            //user\r\n            const user = await getUserInfor();\r\n            if(user) {\r\n                console.log(\"Thong tin nguoi dung:\",user);\r\n                setuser(user);\r\n            }\r\n        }\r\n        getAll();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Container\r\n                groupName=\"col\"\r\n                onDrop={dropResult => onCardDrop(props.workListId, dropResult)}\r\n                getChildPayload={index => props.task[index]\r\n                }\r\n                dragClass=\"card-ghost\"\r\n                dropClass=\"card-ghost-drop\"\r\n\r\n                dropPlaceholder={{\r\n                    animationDuration: 150,\r\n                    showOnTop: true,\r\n                    className: 'drop-preview'\r\n                }}\r\n                dropPlaceholderAnimationDuration={200}>\r\n                {props.task.map((card, index) => (\r\n                    <Draggable key={index}>\r\n                        <div className=\"card-item\" key={index}>\r\n                            <button className=\"typography\" onClick={()=>showModal(card)}>{card.title}</button>\r\n                        </div>\r\n                    </Draggable>\r\n                ))\r\n                }\r\n            </Container>\r\n            <div className=\"workList\">\r\n                {open ? (\r\n                    <div>\r\n                        <input onChange={e => setWorkTask(e.target.value)} type=\"text\" required className=\"input\" placeholder=\"Enter a title\"></input>\r\n                        <button type=\"button\" className=\"button\" onClick={onSubmit} >Add task</button>\r\n                        <CloseOutlined onClick={() => setOpen(false)} style={{ cursor: 'pointer', marginLeft: '80px', fontSize: '20px' }} />\r\n                    </div>\r\n                ) : (\r\n                    <button onClick={() => setOpen(!open)} className=\"add-task\" > <PlusOutlined /> Add task</button>\r\n                )}\r\n            </div>\r\n            <Modal width={1000} centered title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <Task obj={task} user={user} />\r\n            </Modal>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n"]},"metadata":{},"sourceType":"module"}